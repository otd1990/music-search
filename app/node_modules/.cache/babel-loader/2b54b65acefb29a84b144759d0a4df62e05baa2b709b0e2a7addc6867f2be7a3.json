{"ast":null,"code":"var _jsxFileName = \"/Users/oliverdyer1/deezer-app/app/src/components/TrackProgress/TrackProgress.js\";\nimport React from \"react\";\nimport \"./track-progress.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TrackProgress = props => {\n  let {\n    size = 150,\n    progress = 0,\n    trackWidth = 10,\n    trackColor = `#ddd`,\n    indicatorWidth = 10,\n    indicatorColor = `#07c`,\n    indicatorCap = `round`,\n    label = `Loading...`,\n    labelColor = `#333`,\n    spinnerMode = false,\n    spinnerSpeed = 1\n  } = props;\n  const center = size / 2,\n    radius = center - (trackWidth > indicatorWidth ? trackWidth : indicatorWidth),\n    dashArray = 2 * Math.PI * radius,\n    dashOffset = dashArray * ((100 - progress) / 100);\n  let hideLabel = size < 100 || !label.length || spinnerMode ? true : false;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"svg-pi-wrapper\",\n      style: {\n        width: size,\n        height: size\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"svg-pi\",\n        style: {\n          width: size,\n          height: size\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"svg-pi-track\",\n          cx: center,\n          cy: center,\n          fill: \"transparent\",\n          r: radius,\n          stroke: trackColor,\n          strokeWidth: trackWidth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          className: `svg-pi-indicator ${spinnerMode ? \"svg-pi-indicator--spinner\" : \"\"}`,\n          style: {\n            animationDuration: spinnerSpeed * 1000\n          },\n          cx: center,\n          cy: center,\n          fill: \"transparent\",\n          r: radius,\n          stroke: indicatorColor,\n          strokeWidth: indicatorWidth,\n          strokeDasharray: dashArray,\n          strokeDashoffset: dashOffset,\n          strokeLinecap: indicatorCap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = TrackProgress;\nexport default TrackProgress;\nvar _c;\n$RefreshReg$(_c, \"TrackProgress\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","TrackProgress","props","size","progress","trackWidth","trackColor","indicatorWidth","indicatorColor","indicatorCap","label","labelColor","spinnerMode","spinnerSpeed","center","radius","dashArray","Math","PI","dashOffset","hideLabel","length","children","className","style","width","height","cx","cy","fill","r","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","animationDuration","strokeDasharray","strokeDashoffset","strokeLinecap","_c","$RefreshReg$"],"sources":["/Users/oliverdyer1/deezer-app/app/src/components/TrackProgress/TrackProgress.js"],"sourcesContent":["import React from \"react\";\nimport \"./track-progress.css\";\n\nconst TrackProgress = (props) => {\n  let {\n    size = 150,\n    progress = 0,\n    trackWidth = 10,\n    trackColor = `#ddd`,\n    indicatorWidth = 10,\n    indicatorColor = `#07c`,\n    indicatorCap = `round`,\n    label = `Loading...`,\n    labelColor = `#333`,\n    spinnerMode = false,\n    spinnerSpeed = 1,\n  } = props;\n\n  const center = size / 2,\n    radius =\n      center - (trackWidth > indicatorWidth ? trackWidth : indicatorWidth),\n    dashArray = 2 * Math.PI * radius,\n    dashOffset = dashArray * ((100 - progress) / 100);\n\n  let hideLabel = size < 100 || !label.length || spinnerMode ? true : false;\n\n  return (\n    <>\n      <div className=\"svg-pi-wrapper\" style={{ width: size, height: size }}>\n        <svg className=\"svg-pi\" style={{ width: size, height: size }}>\n          <circle\n            className=\"svg-pi-track\"\n            cx={center}\n            cy={center}\n            fill=\"transparent\"\n            r={radius}\n            stroke={trackColor}\n            strokeWidth={trackWidth}\n          />\n          <circle\n            className={`svg-pi-indicator ${\n              spinnerMode ? \"svg-pi-indicator--spinner\" : \"\"\n            }`}\n            style={{ animationDuration: spinnerSpeed * 1000 }}\n            cx={center}\n            cy={center}\n            fill=\"transparent\"\n            r={radius}\n            stroke={indicatorColor}\n            strokeWidth={indicatorWidth}\n            strokeDasharray={dashArray}\n            strokeDashoffset={dashOffset}\n            strokeLinecap={indicatorCap}\n          />\n        </svg>\n      </div>\n    </>\n  );\n};\n\nexport default TrackProgress;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/B,IAAI;IACFC,IAAI,GAAG,GAAG;IACVC,QAAQ,GAAG,CAAC;IACZC,UAAU,GAAG,EAAE;IACfC,UAAU,GAAI,MAAK;IACnBC,cAAc,GAAG,EAAE;IACnBC,cAAc,GAAI,MAAK;IACvBC,YAAY,GAAI,OAAM;IACtBC,KAAK,GAAI,YAAW;IACpBC,UAAU,GAAI,MAAK;IACnBC,WAAW,GAAG,KAAK;IACnBC,YAAY,GAAG;EACjB,CAAC,GAAGX,KAAK;EAET,MAAMY,MAAM,GAAGX,IAAI,GAAG,CAAC;IACrBY,MAAM,GACJD,MAAM,IAAIT,UAAU,GAAGE,cAAc,GAAGF,UAAU,GAAGE,cAAc,CAAC;IACtES,SAAS,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGH,MAAM;IAChCI,UAAU,GAAGH,SAAS,IAAI,CAAC,GAAG,GAAGZ,QAAQ,IAAI,GAAG,CAAC;EAEnD,IAAIgB,SAAS,GAAGjB,IAAI,GAAG,GAAG,IAAI,CAACO,KAAK,CAACW,MAAM,IAAIT,WAAW,GAAG,IAAI,GAAG,KAAK;EAEzE,oBACEd,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACExB,OAAA;MAAKyB,SAAS,EAAC,gBAAgB;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAEtB,IAAI;QAAEuB,MAAM,EAAEvB;MAAK,CAAE;MAAAmB,QAAA,eACnExB,OAAA;QAAKyB,SAAS,EAAC,QAAQ;QAACC,KAAK,EAAE;UAAEC,KAAK,EAAEtB,IAAI;UAAEuB,MAAM,EAAEvB;QAAK,CAAE;QAAAmB,QAAA,gBAC3DxB,OAAA;UACEyB,SAAS,EAAC,cAAc;UACxBI,EAAE,EAAEb,MAAO;UACXc,EAAE,EAAEd,MAAO;UACXe,IAAI,EAAC,aAAa;UAClBC,CAAC,EAAEf,MAAO;UACVgB,MAAM,EAAEzB,UAAW;UACnB0B,WAAW,EAAE3B;QAAW;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eACFtC,OAAA;UACEyB,SAAS,EAAG,oBACVX,WAAW,GAAG,2BAA2B,GAAG,EAC7C,EAAE;UACHY,KAAK,EAAE;YAAEa,iBAAiB,EAAExB,YAAY,GAAG;UAAK,CAAE;UAClDc,EAAE,EAAEb,MAAO;UACXc,EAAE,EAAEd,MAAO;UACXe,IAAI,EAAC,aAAa;UAClBC,CAAC,EAAEf,MAAO;UACVgB,MAAM,EAAEvB,cAAe;UACvBwB,WAAW,EAAEzB,cAAe;UAC5B+B,eAAe,EAAEtB,SAAU;UAC3BuB,gBAAgB,EAAEpB,UAAW;UAC7BqB,aAAa,EAAE/B;QAAa;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAACK,EAAA,GAvDIxC,aAAa;AAyDnB,eAAeA,aAAa;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}